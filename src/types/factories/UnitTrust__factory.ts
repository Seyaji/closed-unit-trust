/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { UnitTrust, UnitTrustInterface } from "../UnitTrust";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_investor",
        type: "address",
      },
    ],
    name: "getInvestor",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "ownedUnits",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "saleUnits",
            type: "uint16",
          },
        ],
        internalType: "struct Investor",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalUnits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_amount",
        type: "uint16",
      },
    ],
    name: "purchaseUnit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff1681525034801561004357600080fd5b50608051611dc561007b600039600081816102d4015281816103630152818161045d015281816104ec015261059c0152611dc56000f3fe6080604052600436106100915760003560e01c80638129fc1c116100595780638129fc1c146101395780638da5cb5b146101505780638f35a75e1461017b578063a754a702146101b8578063f2fde38b146101e357610091565b8063242a37e8146100965780633659cfe6146100b25780634f1ef286146100db57806352d1902d146100f7578063715018a614610122575b600080fd5b6100b060048036038101906100ab9190611144565b61020c565b005b3480156100be57600080fd5b506100d960048036038101906100d491906111cf565b6102d2565b005b6100f560048036038101906100f09190611342565b61045b565b005b34801561010357600080fd5b5061010c610598565b60405161011991906113b7565b60405180910390f35b34801561012e57600080fd5b50610137610651565b005b34801561014557600080fd5b5061014e6106d9565b005b34801561015c57600080fd5b50610165610797565b60405161017291906113e1565b60405180910390f35b34801561018757600080fd5b506101a2600480360381019061019d91906111cf565b6107c1565b6040516101af919061143a565b60405180910390f35b3480156101c457600080fd5b506101cd61085d565b6040516101da919061146e565b60405180910390f35b3480156101ef57600080fd5b5061020a600480360381019061020591906111cf565b61086a565b005b670de0b6b3a76400008161ffff1661022491906114cc565b67ffffffffffffffff16341461026f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102669061156b565b60405180910390fd5b8060c960030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548161ffff021916908361ffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161415610361576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610358906115fd565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166103a0610962565b73ffffffffffffffffffffffffffffffffffffffff16146103f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ed9061168f565b60405180910390fd5b6103ff816109b9565b61045881600067ffffffffffffffff81111561041e5761041d611217565b5b6040519080825280601f01601f1916602001820160405280156104505781602001600182028036833780820191505090505b506000610a38565b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614156104ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e1906115fd565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610529610962565b73ffffffffffffffffffffffffffffffffffffffff161461057f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105769061168f565b60405180910390fd5b610588826109b9565b61059482826001610a38565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610628576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061f90611721565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b610659610ba6565b73ffffffffffffffffffffffffffffffffffffffff16610677610797565b73ffffffffffffffffffffffffffffffffffffffff16146106cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c49061178d565b60405180910390fd5b6106d76000610bae565b565b60006106e56001610c74565b90508015610709576001600060016101000a81548160ff0219169083151502179055505b610711610d64565b6103e860c9600001819055506103e860c960020181905550670de0b6b3a764000060c96001018190555080156107945760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498600160405161078b91906117ff565b60405180910390a15b50565b6000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107c96110d4565b60c960030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900461ffff1661ffff1661ffff1681526020016000820160029054906101000a900461ffff1661ffff1661ffff16815250509050919050565b600060c960000154905090565b610872610ba6565b73ffffffffffffffffffffffffffffffffffffffff16610890610797565b73ffffffffffffffffffffffffffffffffffffffff16146108e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dd9061178d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610956576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094d9061188c565b60405180910390fd5b61095f81610bae565b50565b60006109907f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610dbd565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6109c1610ba6565b73ffffffffffffffffffffffffffffffffffffffff166109df610797565b73ffffffffffffffffffffffffffffffffffffffff1614610a35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2c9061178d565b60405180910390fd5b50565b610a647f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b610dc7565b60000160009054906101000a900460ff1615610a8857610a8383610dd1565b610ba1565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610af057506040513d601f19601f82011682018060405250810190610aed91906118d8565b60015b610b2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2690611977565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114610b94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8b90611a09565b60405180910390fd5b50610ba0838383610e8a565b5b505050565b600033905090565b6000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081609760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060019054906101000a900460ff1615610ceb5760018260ff16148015610ca35750610ca130610eb6565b155b610ce2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd990611a9b565b60405180910390fd5b60009050610d5f565b8160ff1660008054906101000a900460ff1660ff1610610d40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3790611a9b565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b600060019054906101000a900460ff16610db3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610daa90611b2d565b60405180910390fd5b610dbb610ed9565b565b6000819050919050565b6000819050919050565b610dda81610eb6565b610e19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1090611bbf565b60405180910390fd5b80610e467f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610dbd565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610e9383610f3a565b600082511180610ea05750805b15610eb157610eaf8383610f89565b505b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16610f28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1f90611b2d565b60405180910390fd5b610f38610f33610ba6565b610bae565b565b610f4381610dd1565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6060610f9483610eb6565b610fd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fca90611c51565b60405180910390fd5b6000808473ffffffffffffffffffffffffffffffffffffffff1684604051610ffb9190611ceb565b600060405180830381855af49150503d8060008114611036576040519150601f19603f3d011682016040523d82523d6000602084013e61103b565b606091505b50915091506110638282604051806060016040528060278152602001611d696027913961106d565b9250505092915050565b6060831561107d578290506110cd565b6000835111156110905782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c49190611d46565b60405180910390fd5b9392505050565b6040518060400160405280600061ffff168152602001600061ffff1681525090565b6000604051905090565b600080fd5b600080fd5b600061ffff82169050919050565b6111218161110a565b811461112c57600080fd5b50565b60008135905061113e81611118565b92915050565b60006020828403121561115a57611159611100565b5b60006111688482850161112f565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061119c82611171565b9050919050565b6111ac81611191565b81146111b757600080fd5b50565b6000813590506111c9816111a3565b92915050565b6000602082840312156111e5576111e4611100565b5b60006111f3848285016111ba565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61124f82611206565b810181811067ffffffffffffffff8211171561126e5761126d611217565b5b80604052505050565b60006112816110f6565b905061128d8282611246565b919050565b600067ffffffffffffffff8211156112ad576112ac611217565b5b6112b682611206565b9050602081019050919050565b82818337600083830152505050565b60006112e56112e084611292565b611277565b90508281526020810184848401111561130157611300611201565b5b61130c8482856112c3565b509392505050565b600082601f830112611329576113286111fc565b5b81356113398482602086016112d2565b91505092915050565b6000806040838503121561135957611358611100565b5b6000611367858286016111ba565b925050602083013567ffffffffffffffff81111561138857611387611105565b5b61139485828601611314565b9150509250929050565b6000819050919050565b6113b18161139e565b82525050565b60006020820190506113cc60008301846113a8565b92915050565b6113db81611191565b82525050565b60006020820190506113f660008301846113d2565b92915050565b6114058161110a565b82525050565b60408201600082015161142160008501826113fc565b50602082015161143460208501826113fc565b50505050565b600060408201905061144f600083018461140b565b92915050565b6000819050919050565b61146881611455565b82525050565b6000602082019050611483600083018461145f565b92915050565b600067ffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114d782611489565b91506114e283611489565b92508167ffffffffffffffff04831182151516156115035761150261149d565b5b828202905092915050565b600082825260208201905092915050565b7f696e73756666696369656e7420616d6f756e742073656e740000000000000000600082015250565b600061155560188361150e565b91506115608261151f565b602082019050919050565b6000602082019050818103600083015261158481611548565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015250565b60006115e7602c8361150e565b91506115f28261158b565b604082019050919050565b60006020820190508181036000830152611616816115da565b9050919050565b7f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060008201527f6163746976652070726f78790000000000000000000000000000000000000000602082015250565b6000611679602c8361150e565b91506116848261161d565b604082019050919050565b600060208201905081810360008301526116a88161166c565b9050919050565b7f555550535570677261646561626c653a206d757374206e6f742062652063616c60008201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015250565b600061170b60388361150e565b9150611716826116af565b604082019050919050565b6000602082019050818103600083015261173a816116fe565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061177760208361150e565b915061178282611741565b602082019050919050565b600060208201905081810360008301526117a68161176a565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b60006117e96117e46117df846117ad565b6117c4565b6117b7565b9050919050565b6117f9816117ce565b82525050565b600060208201905061181460008301846117f0565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061187660268361150e565b91506118818261181a565b604082019050919050565b600060208201905081810360008301526118a581611869565b9050919050565b6118b58161139e565b81146118c057600080fd5b50565b6000815190506118d2816118ac565b92915050565b6000602082840312156118ee576118ed611100565b5b60006118fc848285016118c3565b91505092915050565b7f45524331393637557067726164653a206e657720696d706c656d656e7461746960008201527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015250565b6000611961602e8361150e565b915061196c82611905565b604082019050919050565b6000602082019050818103600083015261199081611954565b9050919050565b7f45524331393637557067726164653a20756e737570706f727465642070726f7860008201527f6961626c65555549440000000000000000000000000000000000000000000000602082015250565b60006119f360298361150e565b91506119fe82611997565b604082019050919050565b60006020820190508181036000830152611a22816119e6565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611a85602e8361150e565b9150611a9082611a29565b604082019050919050565b60006020820190508181036000830152611ab481611a78565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000611b17602b8361150e565b9150611b2282611abb565b604082019050919050565b60006020820190508181036000830152611b4681611b0a565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b6000611ba9602d8361150e565b9150611bb482611b4d565b604082019050919050565b60006020820190508181036000830152611bd881611b9c565b9050919050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b6000611c3b60268361150e565b9150611c4682611bdf565b604082019050919050565b60006020820190508181036000830152611c6a81611c2e565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611ca5578082015181840152602081019050611c8a565b83811115611cb4576000848401525b50505050565b6000611cc582611c71565b611ccf8185611c7c565b9350611cdf818560208601611c87565b80840191505092915050565b6000611cf78284611cba565b915081905092915050565b600081519050919050565b6000611d1882611d02565b611d22818561150e565b9350611d32818560208601611c87565b611d3b81611206565b840191505092915050565b60006020820190508181036000830152611d608184611d0d565b90509291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122027106c7dc7c714194767f1f80c797dc61aaf79e7c72b58057f88e9ee8ad2783b64736f6c634300080a0033";

export class UnitTrust__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UnitTrust> {
    return super.deploy(overrides || {}) as Promise<UnitTrust>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UnitTrust {
    return super.attach(address) as UnitTrust;
  }
  connect(signer: Signer): UnitTrust__factory {
    return super.connect(signer) as UnitTrust__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnitTrustInterface {
    return new utils.Interface(_abi) as UnitTrustInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UnitTrust {
    return new Contract(address, _abi, signerOrProvider) as UnitTrust;
  }
}
